{
  "active": true,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets3": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-05-21T08:22:37.890Z",
  "id": "H0eR8JfZoKmFSz8c",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "SPLAT prompt evaluation",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -960,
        -40
      ],
      "id": "a88ad81c-8a11-423d-ba47-fea44d2e39ee",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1F9zvo2qD9EZ4LdBRiVGxZXRn5B1ba7-4cP9Uaee74vg",
          "mode": "list",
          "cachedResultName": "AI4Specimen - DISSCo test exmaples",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1F9zvo2qD9EZ4LdBRiVGxZXRn5B1ba7-4cP9Uaee74vg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1F9zvo2qD9EZ4LdBRiVGxZXRn5B1ba7-4cP9Uaee74vg/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -140,
        -40
      ],
      "id": "5b57b834-bf7e-4797-be39-b3f7e18e12a5",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "q0iQAvGFBFgqU0OX",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0",
          "mode": "list",
          "cachedResultName": "SPLAT prompts condensed",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1800479861,
          "mode": "list",
          "cachedResultName": "prompt1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0/edit#gid=1800479861"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -160,
        460
      ],
      "id": "c30f1f02-b002-41c4-aca3-f895ca75146c",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "q0iQAvGFBFgqU0OX",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1180,
        120
      ],
      "id": "a9ba0b11-ba00-4296-8175-91b9685800e5",
      "name": "Merge"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2320,
        200
      ],
      "id": "63115cf0-b07d-4b0b-babb-d8678df6f98f",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "path": "start-eval",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -960,
        360
      ],
      "id": "4d875c6b-6fde-4812-8fb7-bc1b57cce3b9",
      "name": "Webhook",
      "webhookId": "76665000-9db8-44cc-905f-b19a58375959"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0",
          "mode": "list",
          "cachedResultName": "SPLAT prompts condensed",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1193806644,
          "mode": "list",
          "cachedResultName": "prompt2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1INtxDuPN3uYISMUGNbzoWoz9IAdvppD_vPGsdVT6QM0/edit#gid=1193806644"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -140,
        680
      ],
      "id": "7c4bc935-5fed-4764-a3a6-a375fb78a03d",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "q0iQAvGFBFgqU0OX",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -660,
        180
      ],
      "id": "ed7e6e34-55da-45dc-99de-41fb10a7cf89",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        760,
        520
      ],
      "id": "c1f55520-4a51-446d-aaf6-5f53bd33da5c",
      "name": "Merge1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "56a63db8-253c-42f3-a5a7-86cd48928e9b",
              "name": "prompt1",
              "value": "={{ $json['Prompt Text'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        60,
        460
      ],
      "id": "bc6f5f29-2f00-441a-b59c-38d93cf71597",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6a66a8a5-a411-46ba-9189-f058cd88f74a",
              "name": "prompt2",
              "value": "={{ $json['Prompt Text'] }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        80,
        680
      ],
      "id": "71719062-fa7b-4a0e-a5ed-1cb9b298cf6e",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "VMh3rEGCtuevcGuJ",
          "mode": "list",
          "cachedResultName": "SPLAT run - chatgpt-4o"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "gbif_key": "={{ $json['GBIF KEY'] }}",
            "prompt1": "={{ $json.prompt1 }}",
            "prompt2": "={{ $json.prompt2 }}",
            "img_url": "={{ $json['Image URL'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "prompt1",
              "displayName": "prompt1",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "prompt2",
              "displayName": "prompt2",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "img_url",
              "displayName": "img_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "gbif_key",
              "displayName": "gbif_key",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        3220,
        220
      ],
      "id": "5a50c3d0-3988-49f1-a55e-54f54d97396d",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3440,
        220
      ],
      "id": "95426dd9-ca43-465e-9667-5db4583b0025",
      "name": "Wait",
      "webhookId": "7e24c973-1ca5-4739-8156-70a20c382deb",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "splat-result",
          "mode": "list",
          "cachedResultName": "splat-result"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "model",
              "value": "openai/gpt-4o"
            }
          ]
        },
        "options": {
          "outputColumns": [
            "prompt1",
            "prompt2",
            "gbif_key"
          ]
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1240,
        -720
      ],
      "id": "ff0de4ac-f6fc-47e8-8ecd-f6e71601e574",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "9Dpjwh2i1R7PMsSP",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "advanced": true,
        "mergeByFields": {
          "values": [
            {
              "field1": "prompt1",
              "field2": "prompt1"
            },
            {
              "field1": "prompt2",
              "field2": "prompt2"
            },
            {
              "field1": "gbif_key",
              "field2": "GBIF KEY"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {
          "fuzzyCompare": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1960,
        120
      ],
      "id": "2d084394-a246-494c-a02a-b62d1e43cda8",
      "name": "Merge2"
    }
  ],
  "pinData": {
    "Google Sheets1": [
      {
        "json": {
          "row_number": 2,
          "ID": 1,
          "Prompt Text": "You are an expert biologist who specializes in describing preserved specimens. You have an eye for detail and are able to describe preserved specimens with great detail. Your job now is to extract all the information from this image of a preserved specimen, and write a short description that would contain all the information available to you from the image. You never assume higher taxonomical levels of a species you see, except for kingdom. You also transcribe word by word all that available relevant information you found on any labels you see."
        }
      },
      {
        "json": {
          "row_number": 3,
          "ID": 2,
          "Prompt Text": "You are an expert biologist who specializes in describing preserved specimens. You have an eye for detail and are able to describe preserved specimens with great detail. Your job now is to extract all the information from this image of three preserved specimens, and write a short description that would contain all the information available to you from the image. Annotate which label probably belongs to which of the three specimens. You never assume higher taxonomical levels of a species you see, except of kingdom. You also transcribe word by word all that available relevant information you found on any labels you see."
        }
      },
      {
        "json": {
          "row_number": 4,
          "ID": 3,
          "Prompt Text": "You are a collection manager at a natural history museum, in the paleontology department, specialized in transcribing old, handwritten labels from the 18th and 19th centuries. You have an eye for detail and a good understanding of handwritten text, especially from various historical European origins and scripts. You also have taxonomic expertise in fossil marine invertebrates. Please transcribe the attached label of a fossil specimen, both handwritten and printed text, word by word. Keep the original language; do not translate anything. Provide the original text only; no inferences or interpretations."
        }
      },
      {
        "json": {
          "row_number": 5,
          "ID": 4,
          "Prompt Text": "You are a machine who has a repetitive task in describing preserved specimen from the provided labels. You have an eye for detail and are able to read the labels with great detail. Your job now is to extract all the information from the labels in this image of a preserved specimen, and write a short description that would contain all the written or printed information available to you from the image. You never assume higher taxonomical levels of a species you see, except of the Darwin Core term kingdom. You also transcribe word by word all that available relevant information you found on any labels you see. Note that a catalog number often consists of three parts (institution code, collection code, catalog number). Information on a single label is related. A specimen may have multiple labels in different languages. Months are sometimes written or printed in Roman numerals. If a label is on old newspaper, ignore printed newspaper text if it's not part of the specimen data. If a label contains a barcode, it probably also contains the catalog number. Ignore information that cannot be described in Darwin Core terms (e.g., expedition details). A scientific name may contain genus, specific epithet, and authorship; include authorship. Stamps usually include an accession number or original catalog number."
        }
      },
      {
        "json": {
          "row_number": 6,
          "ID": 5,
          "Prompt Text": "Assume the role of a graphologist with expertise in biology and natural history collections (including zoology, botany, and geology). You have an eye for detail and a good understanding of handwritten text from the 18th and 19th centuries, especially from various European origins. You specialize in extracting information such as taxonomic names, geographic and geologic terms, dates, and numbers from museum labels. Please transcribe all text on the attached image, both handwritten and printed, word by word. Keep the original language; do not translate anything. Pay attention to writing the names of people and geographic locations correctly, not making typical OCR mistakes, and considering that label texts may use multiple mixed locales and languages, and historical grammar/geography (e.g., value village/county names most likely to be correct for the given period)."
        }
      },
      {
        "json": {
          "row_number": 7,
          "ID": 6,
          "Prompt Text": "You are a biodiversity data specialist tasked with transcribing a specimen label into Darwin Core terms as accurately and completely as possible. Given a written specimen label, extract all relevant information and map it to appropriate Darwin Core fields. Important instructions: Do not paraphrase the label; preserve original spelling, punctuation, and wording. If a field is not explicitly stated on the label, leave it blank or mark as \"null\". Use standard Darwin Core term names exactly as defined (e.g., scientificName, recordedBy, eventDate, locality, etc.). For dates, convert to ISO 8601 format (YYYY-MM-DD) when possible. If handwriting is ambiguous or unclear, denote uncertain elements in square brackets [] or note uncertainty. You never assume higher taxonomical levels of a species you see, except for the Darwin Core term kingdom. Reply only with the JSON itself, and no other descriptive or explanatory text. Ignore any values that you would give a confidence score of less than 90%. Ignore all text that cannot be described in valid Darwin Core terms."
        }
      },
      {
        "json": {
          "row_number": 8,
          "ID": 7,
          "Prompt Text": "Extract all written or printed information from the labels in this herbarium sheet image as exactly as possible. Transcribe word-for-word, preserving formatting. Do not infer taxonomic ranks beyond kingdom. A scientific name must include genus, species, and authorship. A catalog number typically includes institution code, collection code, and number. Multiple labels may appear, possibly in different languages. Roman numerals may indicate months. Ignore unrelated newspaper print or expedition notes. Barcode labels usually include a catalog number. Stamps often contain accession numbers. Treat each label’s content as contextually related."
        }
      },
      {
        "json": {
          "row_number": 9,
          "ID": 8,
          "Prompt Text": "You are an expert biologist. Your job is to extract all information from this image of a preserved specimen. Write a short description with all available information. Never assume higher taxonomy than kingdom. Transcribe word-by-word all label information. The label is handwritten. Please save the original language of the label text, including any scientific names in their original form. Do not translate into a different language. The collector's details may be relevant. Read the catalog number from under the datamatrix sticker, including any prefix."
        }
      },
      {
        "json": {
          "row_number": 10,
          "ID": 9,
          "Prompt Text": "You are an expert biologist. Extract all information from this image of a preserved specimen, keeping the original language found on the labels. Transcribe labels word by word. The specimen ID, consisting only of digits, is located at the left bottom corner of the image. The name of the collector is located at the right bottom corner. The handwriting is the same for the collector and the rest of the label. Provide only certainly recognized data; in case of doubt, write 'unreadable'."
        }
      },
      {
        "json": {
          "row_number": 11,
          "ID": 10,
          "Prompt Text": "You are an experienced biologist specializing in describing herbarium specimens. You have a keen eye for detail and can describe specimens very accurately. Your task is to extract all information from the provided image of a herbarium specimen and create a short description containing all information from the image. Do not provide information on higher taxonomy beyond kingdom. Perform a literal transcription of all text visible on the specimen's label. The text on the label is handwritten."
        }
      },
      {
        "json": {
          "row_number": 12,
          "ID": 11,
          "Prompt Text": "Perform a word-for-word transcription of the labels in the graphic. Pay attention to all characters present in the original text. Remember, you are an expert in zoological research. Also describe the preserved zoological specimen. If you cannot decipher certain letters, replace them with '[...]'."
        }
      },
      {
        "json": {
          "row_number": 13,
          "ID": 12,
          "Prompt Text": "Your job is to standardize the user's report of a preserved specimen into JSON of Darwin Core terms. Resulting JSON should have structure like this: { \"scientificName\": \"Betula nana\", \"locality\": \"Oslo\", ... }. Only use valid Darwin Core terms to describe the report. Keep original writing and do not translate names."
        }
      },
      {
        "json": {
          "row_number": 14,
          "ID": 13,
          "Prompt Text": "You are an expert biologist who specializes in describing preserved specimens. Your job now is to extract all the label-based information from this image of a preserved specimen. You do not infer any traits or data directly from the physical appearance of the specimen. You never assume higher taxonomical levels of a species you see, except for kingdom. You transcribe word for word all relevant information found on any labels. If there is a barcode ID on the sheet, use the adjacent identifier as the catalogNumber. Be very careful when interpreting handwritten codes and avoid assumptions when unclear."
        }
      },
      {
        "json": {
          "row_number": 15,
          "ID": 14,
          "Prompt Text": "Recognize all text information from the image, no matter if you are certain about the result or not.\""
        }
      },
      {
        "json": {
          "row_number": 16,
          "ID": 15,
          "Prompt Text": "You are a machine. Transcribe word by word all printed and written information from any labels you see. Do this three times internally and only keep the transcribed values that you found and were the same all three times. Based on this consensus, write a short description. You never assume higher taxonomical levels of a species you see, except for kingdom."
        }
      },
      {
        "json": {
          "row_number": 17,
          "ID": 16,
          "Prompt Text": "First, standardize the user's report of a preserved specimen into JSON of Darwin Core terms (e.g., { \"scientificName\": \"Betula nana\", ...}). Keep original writing. Second, analyze your result and compare it with the following JSON data from other AI runs: [Provide example JSONs here]. Finally, provide the consensus JSON result."
        }
      },
      {
        "json": {
          "row_number": 18,
          "ID": 17,
          "Prompt Text": "You are a machine that reads written and printed text on a herbarium specimen. In the right upper corner, you find a stamp with: the collection name (top), inventory number (which is the original catalog number, middle), and institution name (bottom). Below that is the current catalog number. At the bottom, you find a written label with the taxon name, collector (who is also the determinator), and locality information. Transcribe word by word all that available relevant information you found on any labels you see."
        }
      },
      {
        "json": {
          "row_number": 19,
          "ID": 18,
          "Prompt Text": "You are an expert biologist. Extract all information from this image of a preserved specimen. Transcribe word by word all available relevant information found on any labels you see, keeping the original language. The specimen ID is located at the left bottom corner and consists only of digits. Please indicate a confidence score for each transcribed portion of data."
        }
      }
    ],
    "Google Sheets3": [
      {
        "json": {
          "row_number": 2,
          "Prompt ID / Variation Focus": "1. Basic Standardization (Core Task)",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object using exclusively valid Darwin Core terms. The JSON structure should follow: { \\\"scientificName\\\": \\\"Value\\\", \\\"locality\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 3,
          "Prompt ID / Variation Focus": "2. Input from Image, Multiple Specimens",
          "Prompt Text": "From the provided image (potentially containing multiple specimens, like a herbarium sheet), extract information for each specimen. Standardize each specimen's data into a separate JSON object using exclusively valid Darwin Core terms. The structure for each JSON object should be: { \\\"scientificName\\\": \\\"Value\\\", \\\"locality\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 4,
          "Prompt ID / Variation Focus": "3. Input from Pre-extracted Text",
          "Prompt Text": "Take the following transcribed text from museum specimen label(s) and standardize it into a JSON object using exclusively valid Darwin Core terms. If multiple specimens or distinct label sets are identifiable in the transcription, create a separate JSON object for each. Preserve the original language of the transcription. The JSON structure should be: { \\\"scientificName\\\": \\\"Value\\\", \\\"locality\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 5,
          "Prompt ID / Variation Focus": "4. Using OpenDS Terminology",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object using exclusively valid OpenDS terms (e.g., terms prefixed like dwc:termName). The JSON structure should follow: { \\\"dwc:scientificName\\\": \\\"Value\\\", \\\"dwc:locality\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 6,
          "Prompt ID / Variation Focus": "5. MIDS Level 1 Compliance",
          "Prompt Text": "Standardize the information from the provided image or report of a preserved specimen into JSON using valid Darwin Core terms. Ensure the output contains all data elements corresponding to MIDS (Minimum Information about a Digital Specimen) Level 1. Structure as { \\\"scientificName\\\": \\\"Value\\\", ... }. If multiple specimens are present, provide a separate JSON object for each."
        }
      },
      {
        "json": {
          "row_number": 7,
          "Prompt ID / Variation Focus": "6. Strict Output & Handling Non-DwC Data",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object using exclusively valid Darwin Core terms (example structure: { \\\"scientificName\\\": \\\"Value\\\", ... }). Ignore any information that cannot be accurately mapped to a valid Darwin Core term. Your response must be only the JSON object itself, with no additional explanatory text."
        }
      },
      {
        "json": {
          "row_number": 8,
          "Prompt ID / Variation Focus": "7. Specific Field Focus & Extraction Rules",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object using valid Darwin Core terms, following the example structure: { \\\"scientificName\\\": \\\"Value\\\", ... }. Pay special attention to:&lt;br>    * Extracting the catalog number, prioritizing barcode labels if present.&lt;br>    * Including any available geological context information using appropriate Darwin Core terms.&lt;br>    * Combining all original label text into the verbatimLabel field.&lt;br>    * Preserving the original language of transcribed text; do not translate.&lt;br>    * Do not infer information not explicitly present on labels or in the report."
        }
      },
      {
        "json": {
          "row_number": 9,
          "Prompt ID / Variation Focus": "8. Using a Prescribed List of DwC Terms",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object. Use only Darwin Core terms from the following list: ['institutionCode', 'catalogNumber', 'scientificName', 'locality', 'eventDate', 'recordedBy', 'identifiedBy', 'typeStatus'] (Note: provide a relevant list for your tests). Ensure all chosen terms are valid Darwin Core. Structure the output as { \\\"termFromList1\\\": \\\"Value\\\", ... }. Respond with only the JSON object."
        }
      },
      {
        "json": {
          "row_number": 10,
          "Prompt ID / Variation Focus": "9. High Fidelity & Expert Interpretation",
          "Prompt Text": "Act as an expert biologist. Faithfully standardize the provided information about a preserved specimen into a JSON object using valid Darwin Core terms and applicable extensions. Be detailed, thorough, and ensure all information is accurately preserved in fields according to their common and correct usage. Do not infer data beyond what is explicitly stated; transcribe label information word-for-word, preserving the original language. Be cautious with historical geographical names and only assume Kingdom taxonomically unless more is specified. The JSON structure should be { \\\"scientificName\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 11,
          "Prompt ID / Variation Focus": "10. Confidence Thresholding",
          "Prompt Text": "Standardize the provided information about a preserved specimen into a JSON object using valid Darwin Core terms (example: { \\\"scientificName\\\": \\\"Value\\\", ... }). Only include data fields and their values for which your confidence in their accuracy and correct mapping to Darwin Core is 90% or higher. Ignore information that cannot be mapped or is below this confidence. Respond with only the JSON object."
        }
      },
      {
        "json": {
          "row_number": 12,
          "Prompt ID / Variation Focus": "11. Detailed Label Interpretation (Machine Persona)",
          "Prompt Text": "As a data processing system, standardize information from specimen labels (provided as text or from an image description) into JSON using valid Darwin Core terms. Follow these specific interpretation rules:&lt;br>    * A catalog number often consists of an institution code, collection code, and a specific number; try to parse these if distinct.&lt;br>    * Information on a single label is usually related. A specimen may have multiple labels, potentially in different languages; attempt to consolidate coherently.&lt;br>    * Months might be written in Roman numerals; interpret them correctly.&lt;br>    * Distinguish primary label data from any background text (e.g., if a label is on reused paper).&lt;br>    * Barcodes often correspond to a printed catalog number nearby.&lt;br>    * Ignore information clearly not describable in Darwin Core terms (e.g., detailed expedition narratives, unrelated marginalia).&lt;br>    * A scientificName should ideally include genus, specific epithet, and authorship if available.&lt;br>    * If multiple distinct specimens are clearly described, output separate JSON objects for each.&lt;br>The JSON structure should be: { \\\"scientificName\\\": \\\"Value\\\", ... }."
        }
      },
      {
        "json": {
          "row_number": 13,
          "Prompt ID / Variation Focus": "12. Multi-Step Processing",
          "Prompt Text": "Complete the following two-step task:&lt;br>Step 1 (Initial Processing & Transcription): You are an expert in processing museum specimen images. From the provided image of a preserved specimen (potentially with multiple items/labels), extract all textual information from all labels word-for-word. Preserve the original language for all transcribed text. If multiple specimens are clearly distinguishable, annotate which text belongs to which specimen.&lt;br>Step 2 (Standardization): Take the complete transcribed output from Step 1. For each specimen (or distinct label set) identified, standardize its information into a JSON object using exclusively valid Darwin Core terms. The JSON structure for each object should be: { \\\"scientificName\\\": \\\"Value\\\", \\\"locality\\\": \\\"Value\\\", ... }. Your final response should only be the JSON output(s) from this step."
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "errorWorkflow": "7MnksaFaiPR7iyVY"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-05-22T04:00:58.965Z",
  "versionId": "37898d15-96f5-4a31-9ceb-caab01442ca5"
}